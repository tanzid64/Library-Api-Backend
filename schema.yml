openapi: 3.0.3
info:
  title: E-Lit Emporium
  version: 0.0.0
paths:
  /accounts/all-publisher/:
    get:
      operationId: accounts_all_publisher_list
      tags:
      - accounts
      security:
      - jwtHeaderAuth: []
      - jwtCookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AllUser'
          description: ''
    post:
      operationId: accounts_all_publisher_create
      tags:
      - accounts
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AllUser'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AllUser'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AllUser'
        required: true
      security:
      - jwtHeaderAuth: []
      - jwtCookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AllUser'
          description: ''
  /accounts/all-publisher/{id}/:
    get:
      operationId: accounts_all_publisher_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this user.
        required: true
      tags:
      - accounts
      security:
      - jwtHeaderAuth: []
      - jwtCookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AllUser'
          description: ''
    put:
      operationId: accounts_all_publisher_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this user.
        required: true
      tags:
      - accounts
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AllUser'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AllUser'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AllUser'
        required: true
      security:
      - jwtHeaderAuth: []
      - jwtCookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AllUser'
          description: ''
    patch:
      operationId: accounts_all_publisher_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this user.
        required: true
      tags:
      - accounts
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedAllUser'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedAllUser'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedAllUser'
      security:
      - jwtHeaderAuth: []
      - jwtCookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AllUser'
          description: ''
    delete:
      operationId: accounts_all_publisher_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this user.
        required: true
      tags:
      - accounts
      security:
      - jwtHeaderAuth: []
      - jwtCookieAuth: []
      responses:
        '204':
          description: No response body
  /accounts/all-user/:
    get:
      operationId: accounts_all_user_list
      tags:
      - accounts
      security:
      - jwtHeaderAuth: []
      - jwtCookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AllUser'
          description: ''
    post:
      operationId: accounts_all_user_create
      tags:
      - accounts
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AllUser'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AllUser'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AllUser'
        required: true
      security:
      - jwtHeaderAuth: []
      - jwtCookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AllUser'
          description: ''
  /accounts/all-user/{id}/:
    get:
      operationId: accounts_all_user_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this user.
        required: true
      tags:
      - accounts
      security:
      - jwtHeaderAuth: []
      - jwtCookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AllUser'
          description: ''
    put:
      operationId: accounts_all_user_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this user.
        required: true
      tags:
      - accounts
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AllUser'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AllUser'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AllUser'
        required: true
      security:
      - jwtHeaderAuth: []
      - jwtCookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AllUser'
          description: ''
    patch:
      operationId: accounts_all_user_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this user.
        required: true
      tags:
      - accounts
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedAllUser'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedAllUser'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedAllUser'
      security:
      - jwtHeaderAuth: []
      - jwtCookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AllUser'
          description: ''
    delete:
      operationId: accounts_all_user_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this user.
        required: true
      tags:
      - accounts
      security:
      - jwtHeaderAuth: []
      - jwtCookieAuth: []
      responses:
        '204':
          description: No response body
  /accounts/login/:
    post:
      operationId: accounts_login_create
      tags:
      - accounts
      security:
      - jwtHeaderAuth: []
      - jwtCookieAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /accounts/password-reset-confirm/{uid}/{token}/:
    post:
      operationId: accounts_password_reset_confirm_create
      parameters:
      - in: path
        name: token
        schema:
          type: string
        required: true
      - in: path
        name: uid
        schema:
          type: string
        required: true
      tags:
      - accounts
      security:
      - jwtHeaderAuth: []
      - jwtCookieAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /accounts/password/change/:
    post:
      operationId: accounts_password_change_create
      tags:
      - accounts
      security:
      - jwtHeaderAuth: []
      - jwtCookieAuth: []
      responses:
        '200':
          description: No response body
  /accounts/password/reset/:
    post:
      operationId: accounts_password_reset_create
      tags:
      - accounts
      security:
      - jwtHeaderAuth: []
      - jwtCookieAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /accounts/profile/:
    get:
      operationId: accounts_profile_retrieve
      tags:
      - accounts
      security:
      - jwtHeaderAuth: []
      - jwtCookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserProfile'
          description: ''
    put:
      operationId: accounts_profile_update
      tags:
      - accounts
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserProfileUpdate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserProfileUpdate'
      security:
      - jwtHeaderAuth: []
      - jwtCookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserProfileUpdate'
          description: ''
    patch:
      operationId: accounts_profile_partial_update
      tags:
      - accounts
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedUserProfileUpdate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedUserProfileUpdate'
      security:
      - jwtHeaderAuth: []
      - jwtCookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserProfileUpdate'
          description: ''
  /accounts/register/:
    post:
      operationId: accounts_register_create
      tags:
      - accounts
      security:
      - jwtHeaderAuth: []
      - jwtCookieAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /author/:
    get:
      operationId: author_list
      parameters:
      - in: query
        name: id
        schema:
          type: string
          format: uuid
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - author
      security:
      - jwtHeaderAuth: []
      - jwtCookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Author'
          description: ''
    post:
      operationId: author_create
      tags:
      - author
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Author'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Author'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Author'
      security:
      - jwtHeaderAuth: []
      - jwtCookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Author'
          description: ''
  /author/{id}/:
    get:
      operationId: author_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this author.
        required: true
      tags:
      - author
      security:
      - jwtHeaderAuth: []
      - jwtCookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Author'
          description: ''
    put:
      operationId: author_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this author.
        required: true
      tags:
      - author
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Author'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Author'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Author'
      security:
      - jwtHeaderAuth: []
      - jwtCookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Author'
          description: ''
    patch:
      operationId: author_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this author.
        required: true
      tags:
      - author
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedAuthor'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedAuthor'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedAuthor'
      security:
      - jwtHeaderAuth: []
      - jwtCookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Author'
          description: ''
    delete:
      operationId: author_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this author.
        required: true
      tags:
      - author
      security:
      - jwtHeaderAuth: []
      - jwtCookieAuth: []
      responses:
        '204':
          description: No response body
  /book/:
    get:
      operationId: book_list
      parameters:
      - in: query
        name: author
        schema:
          type: string
          format: uuid
      - in: query
        name: category
        schema:
          type: string
          format: uuid
      - in: query
        name: id
        schema:
          type: string
          format: uuid
      - in: query
        name: isbn
        schema:
          type: string
      - in: query
        name: language
        schema:
          type: string
      - name: p
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - in: query
        name: publication_date
        schema:
          type: string
          format: date
      - name: records
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - book
      security:
      - jwtHeaderAuth: []
      - jwtCookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedBookList'
          description: ''
    post:
      operationId: book_create
      tags:
      - book
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/BookCreate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/BookCreate'
        required: true
      security:
      - jwtHeaderAuth: []
      - jwtCookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BookCreate'
          description: ''
  /book-reviews/:
    get:
      operationId: book_reviews_list
      parameters:
      - name: p
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: records
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      tags:
      - book-reviews
      security:
      - jwtHeaderAuth: []
      - jwtCookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedBookReviewGetList'
          description: ''
    post:
      operationId: book_reviews_create
      tags:
      - book-reviews
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BookReview'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/BookReview'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/BookReview'
        required: true
      security:
      - jwtHeaderAuth: []
      - jwtCookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BookReview'
          description: ''
  /book-reviews/{id}/:
    get:
      operationId: book_reviews_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this book review.
        required: true
      tags:
      - book-reviews
      security:
      - jwtHeaderAuth: []
      - jwtCookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BookReviewGet'
          description: ''
    put:
      operationId: book_reviews_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this book review.
        required: true
      tags:
      - book-reviews
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BookReview'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/BookReview'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/BookReview'
        required: true
      security:
      - jwtHeaderAuth: []
      - jwtCookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BookReview'
          description: ''
    patch:
      operationId: book_reviews_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this book review.
        required: true
      tags:
      - book-reviews
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedBookReview'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedBookReview'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedBookReview'
      security:
      - jwtHeaderAuth: []
      - jwtCookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BookReview'
          description: ''
    delete:
      operationId: book_reviews_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this book review.
        required: true
      tags:
      - book-reviews
      security:
      - jwtHeaderAuth: []
      - jwtCookieAuth: []
      responses:
        '204':
          description: No response body
  /book/{id}/:
    get:
      operationId: book_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this book.
        required: true
      tags:
      - book
      security:
      - jwtHeaderAuth: []
      - jwtCookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Book'
          description: ''
    put:
      operationId: book_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this book.
        required: true
      tags:
      - book
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/BookCreate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/BookCreate'
        required: true
      security:
      - jwtHeaderAuth: []
      - jwtCookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BookCreate'
          description: ''
    patch:
      operationId: book_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this book.
        required: true
      tags:
      - book
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedBookCreate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedBookCreate'
      security:
      - jwtHeaderAuth: []
      - jwtCookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BookCreate'
          description: ''
    delete:
      operationId: book_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this book.
        required: true
      tags:
      - book
      security:
      - jwtHeaderAuth: []
      - jwtCookieAuth: []
      responses:
        '204':
          description: No response body
  /books/:
    get:
      operationId: books_list
      tags:
      - books
      security:
      - jwtHeaderAuth: []
      - jwtCookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BookListCreate'
          description: ''
    post:
      operationId: books_create
      tags:
      - books
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/BookListCreate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/BookListCreate'
        required: true
      security:
      - jwtHeaderAuth: []
      - jwtCookieAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BookListCreate'
          description: ''
  /cart/:
    get:
      operationId: cart_list
      tags:
      - cart
      security:
      - jwtHeaderAuth: []
      - jwtCookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Cart'
          description: ''
    post:
      operationId: cart_create
      tags:
      - cart
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CartAdd'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CartAdd'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CartAdd'
        required: true
      security:
      - jwtHeaderAuth: []
      - jwtCookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CartAdd'
          description: ''
  /cart/{id}/:
    get:
      operationId: cart_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - cart
      security:
      - jwtHeaderAuth: []
      - jwtCookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cart'
          description: ''
    put:
      operationId: cart_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - cart
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CartAdd'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CartAdd'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CartAdd'
        required: true
      security:
      - jwtHeaderAuth: []
      - jwtCookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CartAdd'
          description: ''
    patch:
      operationId: cart_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - cart
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedCartAdd'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedCartAdd'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedCartAdd'
      security:
      - jwtHeaderAuth: []
      - jwtCookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CartAdd'
          description: ''
    delete:
      operationId: cart_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - cart
      security:
      - jwtHeaderAuth: []
      - jwtCookieAuth: []
      responses:
        '204':
          description: No response body
  /category/:
    get:
      operationId: category_list
      tags:
      - category
      security:
      - jwtHeaderAuth: []
      - jwtCookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Category'
          description: ''
    post:
      operationId: category_create
      tags:
      - category
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Category'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Category'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Category'
        required: true
      security:
      - jwtHeaderAuth: []
      - jwtCookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Category'
          description: ''
  /category/{id}/:
    get:
      operationId: category_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this category.
        required: true
      tags:
      - category
      security:
      - jwtHeaderAuth: []
      - jwtCookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Category'
          description: ''
    put:
      operationId: category_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this category.
        required: true
      tags:
      - category
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Category'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Category'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Category'
        required: true
      security:
      - jwtHeaderAuth: []
      - jwtCookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Category'
          description: ''
    patch:
      operationId: category_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this category.
        required: true
      tags:
      - category
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedCategory'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedCategory'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedCategory'
      security:
      - jwtHeaderAuth: []
      - jwtCookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Category'
          description: ''
    delete:
      operationId: category_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this category.
        required: true
      tags:
      - category
      security:
      - jwtHeaderAuth: []
      - jwtCookieAuth: []
      responses:
        '204':
          description: No response body
  /deposit/:
    post:
      operationId: deposit_create
      tags:
      - deposit
      security:
      - jwtHeaderAuth: []
      - jwtCookieAuth: []
      responses:
        '200':
          description: No response body
  /place-order/:
    post:
      operationId: place_order_create
      tags:
      - place-order
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BuyBook'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/BuyBook'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/BuyBook'
      security:
      - jwtHeaderAuth: []
      - jwtCookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BuyBook'
          description: ''
  /publisher/all/:
    get:
      operationId: publisher_all_list
      parameters:
      - in: query
        name: id
        schema:
          type: string
          format: uuid
      - in: query
        name: name
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - publisher
      security:
      - jwtHeaderAuth: []
      - jwtCookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AllPublisher'
          description: ''
  /publisher/create/:
    post:
      operationId: publisher_create_create
      tags:
      - publisher
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/OpenPublisher'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/OpenPublisher'
        required: true
      security:
      - jwtHeaderAuth: []
      - jwtCookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OpenPublisher'
          description: ''
  /publisher/update/{id}/:
    get:
      operationId: publisher_update_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - publisher
      security:
      - jwtHeaderAuth: []
      - jwtCookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EditPublisher'
          description: ''
    put:
      operationId: publisher_update_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - publisher
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/EditPublisher'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/EditPublisher'
      security:
      - jwtHeaderAuth: []
      - jwtCookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EditPublisher'
          description: ''
    patch:
      operationId: publisher_update_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - publisher
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedEditPublisher'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedEditPublisher'
      security:
      - jwtHeaderAuth: []
      - jwtCookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EditPublisher'
          description: ''
  /transaction-report/:
    get:
      operationId: transaction_report_list
      tags:
      - transaction-report
      security:
      - jwtHeaderAuth: []
      - jwtCookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TransactionReport'
          description: ''
components:
  schemas:
    AllPublisher:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        name:
          type: string
          maxLength: 255
        logo:
          type: string
          format: uri
        address:
          type: string
          maxLength: 255
      required:
      - address
      - created_at
      - id
      - name
    AllUser:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        username:
          type: string
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          pattern: ^[\w.@+-]+$
          maxLength: 150
        first_name:
          type: string
          maxLength: 150
        last_name:
          type: string
          maxLength: 150
        created_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - created_at
      - id
      - username
    Author:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        first_name:
          type: string
        last_name:
          type: string
        description:
          type: string
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        avater:
          type: string
          format: uri
      required:
      - created_at
      - id
      - updated_at
    Book:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        publisher:
          type: string
          readOnly: true
        author:
          $ref: '#/components/schemas/Author'
        category:
          $ref: '#/components/schemas/Category'
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        title:
          type: string
          maxLength: 255
        language:
          type: string
          nullable: true
          maxLength: 100
        isbn:
          type: string
          nullable: true
          maxLength: 50
        pages:
          type: string
          maxLength: 10
        edition:
          type: string
          maxLength: 10
        cover:
          type: string
          format: uri
        publication_date:
          type: string
          format: date
          nullable: true
        quantity:
          type: integer
          maximum: 9223372036854775807
          minimum: 0
          format: int64
        price:
          type: string
          format: decimal
          pattern: ^-?\d{0,10}(?:\.\d{0,2})?$
        description:
          type: string
      required:
      - author
      - category
      - created_at
      - edition
      - id
      - pages
      - publisher
      - quantity
      - title
      - updated_at
    BookCreate:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        publisher:
          type: string
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        title:
          type: string
          maxLength: 255
        language:
          type: string
          nullable: true
          maxLength: 100
        isbn:
          type: string
          nullable: true
          maxLength: 50
        pages:
          type: string
          maxLength: 10
        edition:
          type: string
          maxLength: 10
        cover:
          type: string
          format: uri
        publication_date:
          type: string
          format: date
          nullable: true
        quantity:
          type: integer
          maximum: 9223372036854775807
          minimum: 0
          format: int64
        price:
          type: string
          format: decimal
          pattern: ^-?\d{0,10}(?:\.\d{0,2})?$
        description:
          type: string
        author:
          type: string
          format: uuid
        category:
          type: string
          format: uuid
      required:
      - author
      - category
      - created_at
      - edition
      - id
      - pages
      - publisher
      - quantity
      - title
      - updated_at
    BookListCreate:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        title:
          type: string
          maxLength: 255
        language:
          type: string
          nullable: true
          maxLength: 100
        isbn:
          type: string
          nullable: true
          maxLength: 50
        pages:
          type: string
          maxLength: 10
        edition:
          type: string
          maxLength: 10
        cover:
          type: string
          format: uri
        publication_date:
          type: string
          format: date
          nullable: true
        quantity:
          type: integer
          maximum: 9223372036854775807
          minimum: 0
          format: int64
        price:
          type: string
          format: decimal
          pattern: ^-?\d{0,10}(?:\.\d{0,2})?$
        description:
          type: string
        author:
          type: string
          format: uuid
        category:
          type: string
          format: uuid
      required:
      - author
      - category
      - created_at
      - edition
      - id
      - pages
      - quantity
      - title
      - updated_at
    BookReview:
      type: object
      properties:
        rating:
          $ref: '#/components/schemas/RatingEnum'
        comment:
          type: string
      required:
      - comment
      - rating
    BookReviewGet:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        reviewer:
          type: string
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        rating:
          $ref: '#/components/schemas/RatingEnum'
        comment:
          type: string
        book:
          type: string
          format: uuid
      required:
      - book
      - comment
      - created_at
      - id
      - rating
      - reviewer
      - updated_at
    BuyBook:
      type: object
      properties:
        book:
          type: string
          format: uuid
          nullable: true
    Cart:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        book:
          type: string
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        quantity:
          type: integer
          maximum: 9223372036854775807
          minimum: 0
          format: int64
        amount:
          type: string
          format: decimal
          pattern: ^-?\d{0,10}(?:\.\d{0,2})?$
        user:
          type: string
          format: uuid
      required:
      - amount
      - book
      - created_at
      - id
      - updated_at
      - user
    CartAdd:
      type: object
      properties:
        book:
          type: string
          format: uuid
        quantity:
          type: integer
      required:
      - book
      - quantity
    Category:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        slug:
          type: string
          pattern: ^[-a-zA-Z0-9_]+$
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        title:
          type: string
          maxLength: 255
      required:
      - created_at
      - id
      - title
      - updated_at
    EditPublisher:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        name:
          type: string
          maxLength: 255
        logo:
          type: string
          format: uri
        address:
          type: string
          maxLength: 255
      required:
      - id
    OpenPublisher:
      type: object
      properties:
        name:
          type: string
          maxLength: 255
        logo:
          type: string
          format: uri
        address:
          type: string
          maxLength: 255
      required:
      - address
      - name
    PaginatedBookList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?p=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?p=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Book'
    PaginatedBookReviewGetList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?p=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?p=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/BookReviewGet'
    PatchedAllUser:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        username:
          type: string
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          pattern: ^[\w.@+-]+$
          maxLength: 150
        first_name:
          type: string
          maxLength: 150
        last_name:
          type: string
          maxLength: 150
        created_at:
          type: string
          format: date-time
          readOnly: true
    PatchedAuthor:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        first_name:
          type: string
        last_name:
          type: string
        description:
          type: string
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        avater:
          type: string
          format: uri
    PatchedBookCreate:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        publisher:
          type: string
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        title:
          type: string
          maxLength: 255
        language:
          type: string
          nullable: true
          maxLength: 100
        isbn:
          type: string
          nullable: true
          maxLength: 50
        pages:
          type: string
          maxLength: 10
        edition:
          type: string
          maxLength: 10
        cover:
          type: string
          format: uri
        publication_date:
          type: string
          format: date
          nullable: true
        quantity:
          type: integer
          maximum: 9223372036854775807
          minimum: 0
          format: int64
        price:
          type: string
          format: decimal
          pattern: ^-?\d{0,10}(?:\.\d{0,2})?$
        description:
          type: string
        author:
          type: string
          format: uuid
        category:
          type: string
          format: uuid
    PatchedBookReview:
      type: object
      properties:
        rating:
          $ref: '#/components/schemas/RatingEnum'
        comment:
          type: string
    PatchedCartAdd:
      type: object
      properties:
        book:
          type: string
          format: uuid
        quantity:
          type: integer
    PatchedCategory:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        slug:
          type: string
          pattern: ^[-a-zA-Z0-9_]+$
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        title:
          type: string
          maxLength: 255
    PatchedEditPublisher:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        name:
          type: string
          maxLength: 255
        logo:
          type: string
          format: uri
        address:
          type: string
          maxLength: 255
    PatchedUserProfileUpdate:
      type: object
      properties:
        username:
          type: string
        email:
          type: string
          format: email
        phone:
          type: string
          nullable: true
          maxLength: 15
        avater:
          type: string
          format: uri
        first_name:
          type: string
          maxLength: 150
        last_name:
          type: string
          maxLength: 150
    RatingEnum:
      enum:
      - 1
      - 2
      - 3
      - 4
      - 5
      type: integer
      description: |-
        * `1` - 1
        * `2` - 2
        * `3` - 3
        * `4` - 4
        * `5` - 5
    TransactionReport:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        book:
          type: string
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        amount:
          type: string
          format: decimal
          pattern: ^-?\d{0,10}(?:\.\d{0,2})?$
        type:
          $ref: '#/components/schemas/TypeEnum'
        user:
          type: string
          format: uuid
      required:
      - amount
      - book
      - created_at
      - id
      - type
      - updated_at
      - user
    TypeEnum:
      enum:
      - Deposite
      - Purchase
      type: string
      description: |-
        * `Deposite` - Deposite
        * `Purchase` - Purchase
    UserProfile:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        last_login:
          type: string
          format: date-time
          nullable: true
        is_superuser:
          type: boolean
          title: Superuser status
          description: Designates that this user has all permissions without explicitly
            assigning them.
        username:
          type: string
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          pattern: ^[\w.@+-]+$
          maxLength: 150
        first_name:
          type: string
          maxLength: 150
        last_name:
          type: string
          maxLength: 150
        is_staff:
          type: boolean
          title: Staff status
          description: Designates whether the user can log into this admin site.
        is_active:
          type: boolean
          title: Active
          description: Designates whether this user should be treated as active. Unselect
            this instead of deleting accounts.
        date_joined:
          type: string
          format: date-time
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        avater:
          type: string
          format: uri
        phone:
          type: string
          nullable: true
          maxLength: 15
        balance:
          type: string
          format: decimal
          pattern: ^-?\d{0,10}(?:\.\d{0,2})?$
        email:
          type: string
          format: email
          maxLength: 254
        is_publisher:
          type: boolean
        address1:
          type: string
          nullable: true
        address2:
          type: string
          nullable: true
      required:
      - created_at
      - email
      - id
      - updated_at
      - username
    UserProfileUpdate:
      type: object
      properties:
        username:
          type: string
        email:
          type: string
          format: email
        phone:
          type: string
          nullable: true
          maxLength: 15
        avater:
          type: string
          format: uri
        first_name:
          type: string
          maxLength: 150
        last_name:
          type: string
          maxLength: 150
  securitySchemes:
    jwtCookieAuth:
      type: apiKey
      in: cookie
      name: my-app-auth
    jwtHeaderAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
